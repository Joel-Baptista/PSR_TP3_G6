#!/usr/bin/env python3
import argparse
import math
import time
import cv2
from cv_bridge import CvBridge
import numpy as np
import colorama
from operator import itemgetter
import rospy
import copy
from sensor_msgs.msg import Image, LaserScan, CameraInfo
from std_msgs.msg import Header, ColorRGBA
import tf2_geometry_msgs
import tf2_ros
from visualization_msgs.msg import Marker, MarkerArray
from geometry_msgs.msg import Twist, PoseStamped, Point, Pose, Vector3, Quaternion
from p_g06_sensors.msg import PlayerLocation


class Driver:
    def __init__(self):
        self.players = []

        self.name = rospy.get_name()

        self.name = self.name.strip("/")
        idx = self.name.find("_", 0, len(self.name))

        self.name = self.name[0:idx]
        print("My player name is " + self.name)

        topic_location = "/" + self.name + '/player_location'

        print("I'm subscribing to " + topic_location)

        self.subscriber_img = rospy.Subscriber(topic_location, PlayerLocation, self.getLocationCallback)  # Gets location from player_finder


    def getLocationCallback(self, msg):
        self.players = []
        for i in msg.idx:
            object = {"id": i, "pixels": (msg.Xpixel[i], msg.Ypixel[i]), "points": msg.locations[i], "team": msg.teams[i]}
            self.players.append(object)


        print(self.players)


def main():
    # ---------------------------------------------------
    # INITIALIZATION
    # ---------------------------------------------------

    rospy.init_node('Driver', anonymous=False)

    driver = Driver()

    rospy.spin()


if __name__ == '__main__':
    main()
